{
  "extends": [
    "tslint:recommended",
    "tslint-eslint-rules",
    "tslint-react"
  ],
  // "rulesDirectory": [
  //   "./tslintrules/"
  // ],
  "linterOptions": {
    "exclude": [
      "./node_modules/**/*",
      "./**/*/*.less.d.ts"
    ]
  },
  "rules": {
    "forin": false,
    "object-literal-sort-keys": false,
    "import-blacklist": [
      true,
      [
        ".*\\.spec$"
      ],
      {
        "redux-dynamic-modules-saga": [
          "getSagaExtension"
        ]
      }
    ],
    // class-related rules
    "member-ordering": false,
    "max-classes-per-file": false,
    "member-access": false,
    // logical rules
    "triple-equals": [
      true,
      "allow-undefined-check",
      "allow-null-check"
    ],
    "no-eval": true,
    "no-this-assignment": false,
    "no-shadowed-variable": false,
    "unnecessary-else": [
      true,
      {
        "allow-else-if": true
      }
    ],
    // variable declaration rules
    "prefer-const": [
      true,
      {
        "destructuring": "all"
      }
    ],
    "no-var-keyword": true,
    "one-variable-per-declaration": false,
    // naming rules
    "variable-name": [
      true,
      "check-format",
      "allow-leading-underscore",
      "allow-pascal-case"
    ],
    "class-name": true,
    "object-literal-shorthand": true,
    // markup-related rules
    "quotemark": [
      true,
      "double",
      "avoid-escape",
      "avoid-template",
      "jsx-double"
    ],
    "max-line-length": [
      true,
      {
        "limit": 140,
        "ignore-pattern": "^\\s*(import|export|type|interface|class)\\s*"
      }
    ],
    "no-consecutive-blank-lines": true,
    "eofline": true,
    "trailing-comma": [
      true,
      {
        "multiline": {
          "objects": "always",
          "arrays": "always",
          "functions": "never",
          "typeLiterals": "ignore"
        },
        "esSpecCompliant": true
      }
    ],
    "semicolon": [
      true,
      "always"
    ],
    "import-spacing": true,
    "object-literal-key-quotes": [
      true,
      "as-needed"
    ],
    "align": [
      true,
      "parameters"
    ],
    "indent": [
      true,
      "spaces",
      4
    ],
    "no-irregular-whitespace": true,
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-preblock",
      "check-separator",
      "check-type"
    ],
    "no-trailing-whitespace": [
      true,
      "ignore-comments",
      "ignore-blank-lines"
    ],
    "object-curly-spacing": true,
    "array-bracket-spacing": [
      true,
      "never"
    ],
    "arrow-parens": [
      true,
      "ban-single-arg-parens"
    ],
    // react-related rules
    "jsx-no-multiline-js": false,
    "jsx-no-lambda": false,
    "only-arrow-functions": false,
    // ts-related
    "array-type": [
      true,
      "array"
    ],
    "no-angle-bracket-type-assertion": false,
    "ban-types": [
      true,
      [
        "Object",
        "Avoid using the `Object` type. Did you mean `object`?"
      ],
      [
        "Boolean",
        "Avoid using the `Boolean` type. Did you mean `boolean`?"
      ],
      [
        "Number",
        "Avoid using the `Number` type. Did you mean `number`?"
      ],
      [
        "String",
        "Avoid using the `String` type. Did you mean `string`?"
      ],
      [
        "Symbol",
        "Avoid using the `Symbol` type. Did you mean `symbol`?"
      ]
    ],
    "interface-name": [
      true,
      "never-prefix"
    ],
    "interface-over-type-literal": false,
    "no-cross-feature-imports": [
      true,
      {
        "ignoreFeatures": [
          "app",
          "Tests",
          "QUnit"
        ],
        "allowedImports": [
          "common",
          "const",
          "EasyProjects",
          "EasyProjectsCommon",
          "JQuery",
          "normalizr",
          "Redux",
          "resxDist",
          "sharedComponents",
          "sharedHOC",
          "SignalR",
          "typings",
          "utils",
          "WrapperComponents",
          "Filters",
          "Tests",
          "AIEvents",
          "UserInvite",
          "Canvas"
        ]
      }
    ],
    "ban": [
      true,
      {
        "name": [
          "ReactDom",
          "render"
        ],
        "message": "Use renderReactComponent() function with error logging instead of ReactDom.render()"
      }
    ]
  }
}